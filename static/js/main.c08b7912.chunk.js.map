{"version":3,"sources":["MoodIndicator.js","App.js","serviceWorker.js","index.js"],"names":["MoodIndicator","state","isDragging","draggedX","_this","props","initialX","draggedY","initialY","onDragStart","e","setState","onDragEnd","console","log","currentTarget","getX","getY","dir","subLabels","this","wantsAttention","react_default","a","createElement","ReactKonva","text","x","y","width","fontSize","fill","aboveEquator","align","belowEquator","needsSpace","window","innerWidth","height","innerHeight","radius","renderSpaceLabels","renderAttentionLabels","points","stroke","tension","numPoints","innerRadius","outerRadius","draggable","DUPLICATE_OFFSET_X","React","Component","App","className","src_MoodIndicator","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c08b7912.chunk.js","sourcesContent":["import React from \"react\";\nimport { Circle, Group, Layer, Line, Star, Stage, Text } from 'react-konva';\n\n\nclass MoodIndicator extends React.Component {\n  state = {\n    isDragging: false,\n    draggedX: this.props.initialX,\n    draggedY: this.props.initialY\n  };\n\n  onDragStart = (e) => {\n    this.setState({\n      isDragging: true\n    });\n  }\n\n  onDragEnd = (e) => {\n    console.log('x y:', e.currentTarget.getX(), e.currentTarget.getY());\n    console.dir(e);\n    this.setState({\n      isDragging: false,\n      draggedX: e.currentTarget.getX(),\n      draggedY: e.currentTarget.getY(),\n    });\n  }\n\n  // TODO: move to separate files\n  renderAttentionLabels() {\n    let subLabels;\n    if (this.wantsAttention()) {\n      subLabels = (\n        <Group>\n          <Text\n            text=\"Conversation\"\n            x={290}\n            y={this.props.initialY - 60} width={75} fontSize={12} fill={this.aboveEquator() ? \"yellow\" : \"white\"} align=\"left\"/>\n          <Text x={290} y={this.props.initialY + 55} width={75} text=\"Cuddling\" fontSize={12} fill={this.belowEquator() ? \"yellow\" : \"white\"} align=\"left\"/>\n        </Group>\n      )\n    }\n    return (\n      <Group>\n        <Text x={315} y={this.props.initialY - 10} width={75} text=\"I Want Attention\" fontSize={15} fill={this.wantsAttention() ? \"yellow\" : \"white\"} align=\"left\"/>\n        {subLabels}\n      </Group>\n    );\n  };\n\n  renderSpaceLabels() {\n    const X_PADDING=160;\n    const Y_PADDING=60;\n    const WIDTH=80;\n    const FONT_SIZE=12;\n\n    let subLabels;\n    if (this.needsSpace()) {\n      subLabels = (\n        <Group>\n          <Text\n            text=\"Me Time\"\n            x={this.props.initialX - X_PADDING}\n            y={this.props.initialY - Y_PADDING}\n            width={WIDTH}\n            fontSize={FONT_SIZE}\n            fill={this.aboveEquator() ? \"yellow\" : \"white\"}\n            align=\"left\"/>\n          <Text\n            text=\"Cooling Off\"\n            x={this.props.initialX - X_PADDING}\n            y={this.props.initialY + Y_PADDING}\n            width={WIDTH}\n            fontSize={FONT_SIZE}\n            fill={this.belowEquator() ? \"yellow\" : \"white\"}\n            align=\"left\"/>\n        </Group>\n      )\n    }\n    return (\n      <Group>\n        <Text\n          text=\"I Need Space\"\n          x={10}\n          y={this.props.initialY - 10}\n          width={75}\n          fontSize={15}\n          fill={this.needsSpace() ? \"yellow\" : \"white\"}\n          align=\"right\"\n        />\n        {subLabels}\n      </Group>\n    );\n  };\n\n  belowEquator() {\n    return this.state.draggedY > this.props.initialY;\n  };\n\n  aboveEquator() {\n    return this.state.draggedY < this.props.initialY;\n  };\n\n  wantsAttention() {\n    return this.state.draggedX > this.props.initialX;\n  };\n\n  needsSpace() {\n    return this.state.draggedX < this.props.initialX;\n  };\n\n  render() {\n    let DUPLICATE_OFFSET_X = 400;\n    return (\n      <Stage width={window.innerWidth} height={window.innerHeight}>\n        <Layer>\n          <Text x={25} y={this.props.initialY + 110} width={350} text=\"How are you feeling right now?\" fontSize={18} fill=\"white\" align=\"center\"/>\n          <Circle x={this.props.initialX} y={this.props.initialY} radius={this.props.radius} fill=\"green\" />\n          {this.renderSpaceLabels()}\n          {this.renderAttentionLabels()}\n          <Line\n            points={[\n              this.props.initialX - this.props.radius, this.props.initialY,\n              this.props.initialX + this.props.radius, this.props.initialY]}\n            stroke='black' tension={1} />\n          <Circle x={200} y={this.props.initialY} radius={5} fill=\"black\" />\n          <Star x={200} y={this.props.initialY}\n            numPoints={5}\n            innerRadius={5} outerRadius={10}\n            fill={this.state.isDragging ? 'white' : 'yellow'}\n            draggable\n            onDragStart={this.onDragStart}\n            onDragEnd={this.onDragEnd}\n          />\n        </Layer>\n        <Layer>\n          <Text\n            text=\"Here's how your partner feels\"\n            x={DUPLICATE_OFFSET_X + 25} y={this.props.initialY + 110} width={350} fontSize={18}\n            fill=\"yellow\" align=\"center\"/>\n          <Circle x={this.props.initialX + DUPLICATE_OFFSET_X} y={this.props.initialY} radius={this.props.radius} fill=\"green\" />\n          <Group>\n            <Text\n              text=\"I Need Space\"\n              x={DUPLICATE_OFFSET_X + 10}\n              y={this.props.initialY - 10}\n              width={75}\n              fontSize={15}\n              fill={\"yellow\"}\n              align=\"right\" />\n            <Text\n              text=\"Me Time\"\n              x={DUPLICATE_OFFSET_X + this.props.initialX - 160}\n              y={this.props.initialY - 60}\n              width={75}\n              fontSize={12}\n              fill=\"yellow\"\n              align=\"left\" />\n            {this.renderSpaceLabels()}\n            <Line\n              points={[\n                DUPLICATE_OFFSET_X + this.props.initialX - this.props.radius, this.props.initialY,\n                DUPLICATE_OFFSET_X + this.props.initialX + this.props.radius, this.props.initialY]}\n              stroke='black' tension={1} />\n            <Circle x={200 + DUPLICATE_OFFSET_X} y={this.props.initialY} radius={5} fill=\"black\" />\n            <Star x={200 + DUPLICATE_OFFSET_X - 75} y={this.props.initialY - 20}\n            numPoints={5}\n            innerRadius={5} outerRadius={10}\n            fill='yellow' />\n          </Group>\n        </Layer>\n      </Stage>\n    );\n  };\n}\nexport default MoodIndicator;\n","import React, { Component } from 'react';\nimport './App.css';\nimport MoodIndicator from './MoodIndicator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <MoodIndicator initialX={200} initialY={150} radius={100}/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}