{"version":3,"sources":["MoodIndicator.js","App.js","serviceWorker.js","index.js"],"names":["Title","_ref","x","y","react_default","a","createElement","ReactKonva","width","text","fontSize","fill","align","MoodIndicator","state","isDragging","draggedX","_this","props","initialX","draggedY","initialY","onDragStart","e","setState","onDragEnd","currentTarget","getX","getY","this","subLabels","needsSpace","aboveEquator","belowEquator","wantsAttention","window","innerWidth","height","innerHeight","radius","renderSpaceLabels","renderAttentionLabels","points","stroke","tension","numPoints","innerRadius","outerRadius","draggable","renderPartner","DUPLICATE_OFFSET_X","React","Component","App","className","src_MoodIndicator","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e136f080.chunk.js","sourcesContent":["import React from \"react\";\nimport { Circle, Group, Layer, Line, Star, Stage, Text } from 'react-konva';\n\n\nclass MoodIndicator extends React.Component {\n  state = {\n    isDragging: false,\n    draggedX: this.props.initialX,\n    draggedY: this.props.initialY\n  };\n\n  onDragStart = (e) => {\n    this.setState({\n      isDragging: true\n    });\n  }\n\n  onDragEnd = (e) => {\n    this.setState({\n      isDragging: false,\n      draggedX: e.currentTarget.getX(),\n      draggedY: e.currentTarget.getY(),\n    });\n  }\n\n  belowEquator() {\n    return this.state.draggedY > this.props.initialY;\n  };\n\n  aboveEquator() {\n    return this.state.draggedY < this.props.initialY;\n  };\n\n  wantsAttention() {\n    return this.state.draggedX > this.props.initialX;\n  };\n\n  needsSpace() {\n    return this.state.draggedX < this.props.initialX;\n  };\n\n  renderSpaceLabels() {\n    const X_PADDING=120;\n    const Y_PADDING=50;\n    const WIDTH=60;\n    const FONT_SIZE=12;\n\n    let subLabels;\n    if (this.needsSpace()) {\n      subLabels = (\n        <Group>\n          <Text\n            text=\"Me Time\"\n            x={this.props.initialX - X_PADDING}\n            y={this.props.initialY - Y_PADDING}\n            width={WIDTH}\n            fontSize={FONT_SIZE}\n            fill={this.aboveEquator() ? \"yellow\" : \"white\"}\n            align=\"left\"/>\n          <Text\n            text=\"Cooling Off\"\n            x={this.props.initialX - X_PADDING}\n            y={this.props.initialY + Y_PADDING}\n            width={WIDTH}\n            fontSize={FONT_SIZE}\n            fill={this.belowEquator() ? \"yellow\" : \"white\"}\n            align=\"left\"/>\n        </Group>\n      )\n    }\n    return (\n      <Group>\n        <Text\n          text=\"I Need Space\"\n          x={this.props.initialX - 175}\n          y={this.props.initialY - 10}\n          width={75}\n          fontSize={15}\n          fill={this.needsSpace() ? \"yellow\" : \"white\"}\n          align=\"right\"\n        />\n        {subLabels}\n      </Group>\n    );\n  };\n\n  // TODO: move to separate files\n  renderAttentionLabels() {\n    let subLabels;\n    if (this.wantsAttention()) {\n      subLabels = (\n        <Group>\n          <Text\n            text=\"Conversation\"\n            x={this.props.initialX + 60}\n            y={this.props.initialY - 50}\n            width={75} fontSize={12} fill={this.aboveEquator() ? \"yellow\" : \"white\"} align=\"left\"/>\n          <Text\n            text=\"Cuddling\"\n            x={this.props.initialX + 60}\n            y={this.props.initialY + 50}\n            width={75} fontSize={12} fill={this.belowEquator() ? \"yellow\" : \"white\"} align=\"left\"/>\n        </Group>\n      )\n    }\n    return (\n      <Group>\n        <Text\n          text=\"I Want Love\"\n          x={this.props.initialX + 100}\n          y={this.props.initialY - 10}\n          width={75}\n          fontSize={15}\n          fill={this.wantsAttention() ? \"yellow\" : \"white\"}\n          align=\"left\"/>\n        {subLabels}\n      </Group>\n    );\n  };\n\n  render() {\n    return (\n      <Stage width={window.innerWidth} height={window.innerHeight}>\n        <Layer>\n          <Title x={this.props.initialX - 75} y={this.props.initialY + 110}/>\n          <Circle x={this.props.initialX} y={this.props.initialY} radius={this.props.radius} fill=\"green\" />\n          {this.renderSpaceLabels()}\n          {this.renderAttentionLabels()}\n          <Line\n            points={[\n              this.props.initialX - this.props.radius, this.props.initialY,\n              this.props.initialX + this.props.radius, this.props.initialY]}\n            stroke='black' tension={1} />\n          <Circle x={this.props.initialX} y={this.props.initialY} radius={5} fill=\"black\" />\n          <Star x={this.props.initialX} y={this.props.initialY}\n            numPoints={5}\n            innerRadius={5} outerRadius={10}\n            fill={this.state.isDragging ? 'white' : 'yellow'}\n            draggable\n            onDragStart={this.onDragStart}\n            onDragEnd={this.onDragEnd}\n          />\n          {this.renderPartner()}\n        </Layer>\n      </Stage>\n    );\n  };\n\n  renderPartner() {\n    let DUPLICATE_OFFSET_X = 300;\n    return (\n      <Group>\n        <Text\n          text=\"Here's how your partner feels\"\n          x={DUPLICATE_OFFSET_X + this.props.initialX - 75}\n          y={this.props.initialY + 110}\n          width={150} fontSize={18}\n          fill=\"yellow\" align=\"center\"/>\n        <Circle x={this.props.initialX + DUPLICATE_OFFSET_X} y={this.props.initialY} radius={this.props.radius} fill=\"green\" />\n        <Text\n          text=\"I Need Space\"\n          x={DUPLICATE_OFFSET_X + this.props.initialX - 170}\n          y={this.props.initialY - 10}\n          width={75}\n          fontSize={15}\n          fill={\"yellow\"}\n          align=\"right\" />\n        <Text\n          text=\"Me Time\"\n          x={DUPLICATE_OFFSET_X + this.props.initialX - 100}\n          y={this.props.initialY - 50}\n          width={75}\n          fontSize={12}\n          fill=\"yellow\"\n          align=\"left\" />\n        <Line\n          points={[\n            DUPLICATE_OFFSET_X + this.props.initialX - this.props.radius, this.props.initialY,\n            DUPLICATE_OFFSET_X + this.props.initialX + this.props.radius, this.props.initialY]}\n          stroke='black' tension={1} />\n        <Circle x={DUPLICATE_OFFSET_X + this.props.initialX} y={this.props.initialY} radius={5} fill=\"black\" />\n        <Star x={DUPLICATE_OFFSET_X - 75 + this.props.initialX} y={this.props.initialY - 20}\n        numPoints={5}\n        innerRadius={5} outerRadius={10}\n        fill='yellow' />\n      </Group>\n    )\n  }\n}\n\nfunction Title({x, y}) {\n  return (\n    <Text\n      x={x}\n      y={y}\n      width={150}\n      text=\"How are you feeling right now?\" fontSize={18} fill=\"white\" align=\"center\"/>\n  );\n};\n\nexport default MoodIndicator;\n","import React, { Component } from 'react';\nimport './App.css';\nimport MoodIndicator from './MoodIndicator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <MoodIndicator initialX={150} initialY={150} radius={90}/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}